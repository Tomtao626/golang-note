1.值类型 指针都有对应的数值类型 形式为 *数据类型 比如int类型的指针就是*int float32类型的指针就是*float32
2.值类型范围 int/float/bool/string/数组/结构体struct
3.引用类型范围 指针/slice(切片)/map/channel(管道)/interface等

值类型：变量直接存储值，内存通常在栈中分配
引用类型：变量存储的是一个地址，这个地址对应的空间才真正存储数据，
        内存通常在堆上分配，当没有任何变量引用这个地址时，该地址对应的数据空间就变成了一个垃圾，由GC来回收

标示符命名注意事项：
    1.下划线"_"本身在Go中是一个特殊的标示符，称为空标示符，可以代表任何其他的标示符，但是它对应的值会被忽略（比如，忽略某个返回值），
    所以仅能被作为占位符使用，不能作为标示符使用。
    2.包名：保持package的名字和目录名称保持一致，尽量采取有意义的包名，简短，有意义。不要和标准库冲突。
    3.变量名/函数名/常量名采用驼峰命名法（如 var stuName string = "tom_tao"）
    4.如果变量名/函数名/常量名首字母大写，则可以被其他的包访问。如果首字母小写，则只能在本包内使用
        （可理解为 首字母大写是公开的，首字母小写是私有的，在golang中是没有public/private关键字的）